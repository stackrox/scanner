// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.4
// source: scanner/api/v1/image_scan_service.proto

package scannerV1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ScanStatus int32

const (
	ScanStatus_UNSET     ScanStatus = 0
	ScanStatus_ANALYZING ScanStatus = 1
	ScanStatus_FAILED    ScanStatus = 2
	ScanStatus_SUCCEEDED ScanStatus = 3
)

// Enum value maps for ScanStatus.
var (
	ScanStatus_name = map[int32]string{
		0: "UNSET",
		1: "ANALYZING",
		2: "FAILED",
		3: "SUCCEEDED",
	}
	ScanStatus_value = map[string]int32{
		"UNSET":     0,
		"ANALYZING": 1,
		"FAILED":    2,
		"SUCCEEDED": 3,
	}
)

func (x ScanStatus) Enum() *ScanStatus {
	p := new(ScanStatus)
	*p = x
	return p
}

func (x ScanStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ScanStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_scanner_api_v1_image_scan_service_proto_enumTypes[0].Descriptor()
}

func (ScanStatus) Type() protoreflect.EnumType {
	return &file_scanner_api_v1_image_scan_service_proto_enumTypes[0]
}

func (x ScanStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ScanStatus.Descriptor instead.
func (ScanStatus) EnumDescriptor() ([]byte, []int) {
	return file_scanner_api_v1_image_scan_service_proto_rawDescGZIP(), []int{0}
}

type ScanImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image    string        `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Registry *RegistryData `protobuf:"bytes,2,opt,name=registry,proto3" json:"registry,omitempty"`
	// uncertifiedRHEL tells the Scanner to scan the image
	// in an uncertified manner, if the image is RHEL-based.
	UncertifiedRHEL bool `protobuf:"varint,3,opt,name=uncertifiedRHEL,proto3" json:"uncertifiedRHEL,omitempty"`
}

func (x *ScanImageRequest) Reset() {
	*x = ScanImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanImageRequest) ProtoMessage() {}

func (x *ScanImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanImageRequest.ProtoReflect.Descriptor instead.
func (*ScanImageRequest) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_image_scan_service_proto_rawDescGZIP(), []int{0}
}

func (x *ScanImageRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ScanImageRequest) GetRegistry() *RegistryData {
	if x != nil {
		return x.Registry
	}
	return nil
}

func (x *ScanImageRequest) GetUncertifiedRHEL() bool {
	if x != nil {
		return x.UncertifiedRHEL
	}
	return false
}

type ScanImageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScannerVersion string     `protobuf:"bytes,3,opt,name=scanner_version,json=scannerVersion,proto3" json:"scanner_version,omitempty"`
	Status         ScanStatus `protobuf:"varint,1,opt,name=status,proto3,enum=scannerV1.ScanStatus" json:"status,omitempty"`
	Image          *ImageSpec `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *ScanImageResponse) Reset() {
	*x = ScanImageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScanImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScanImageResponse) ProtoMessage() {}

func (x *ScanImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScanImageResponse.ProtoReflect.Descriptor instead.
func (*ScanImageResponse) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_image_scan_service_proto_rawDescGZIP(), []int{1}
}

func (x *ScanImageResponse) GetScannerVersion() string {
	if x != nil {
		return x.ScannerVersion
	}
	return ""
}

func (x *ScanImageResponse) GetStatus() ScanStatus {
	if x != nil {
		return x.Status
	}
	return ScanStatus_UNSET
}

func (x *ScanImageResponse) GetImage() *ImageSpec {
	if x != nil {
		return x.Image
	}
	return nil
}

type GetImageScanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Only one of the fields in ImageSpec needs to be set for the request to be properly formed
	// If both are set, then digest is used
	ImageSpec *ImageSpec `protobuf:"bytes,1,opt,name=image_spec,json=imageSpec,proto3" json:"image_spec,omitempty"`
	// uncertifiedRHEL set to `true` tells the Scanner to
	// return uncertified scan results for the given RHEL-based image
	// (if the image is RHEL-based).
	UncertifiedRHEL bool `protobuf:"varint,2,opt,name=uncertifiedRHEL,proto3" json:"uncertifiedRHEL,omitempty"`
}

func (x *GetImageScanRequest) Reset() {
	*x = GetImageScanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImageScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageScanRequest) ProtoMessage() {}

func (x *GetImageScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageScanRequest.ProtoReflect.Descriptor instead.
func (*GetImageScanRequest) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_image_scan_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetImageScanRequest) GetImageSpec() *ImageSpec {
	if x != nil {
		return x.ImageSpec
	}
	return nil
}

func (x *GetImageScanRequest) GetUncertifiedRHEL() bool {
	if x != nil {
		return x.UncertifiedRHEL
	}
	return false
}

// Next tag: 5
type GetImageScanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScannerVersion string     `protobuf:"bytes,4,opt,name=scanner_version,json=scannerVersion,proto3" json:"scanner_version,omitempty"`
	Status         ScanStatus `protobuf:"varint,1,opt,name=status,proto3,enum=scannerV1.ScanStatus" json:"status,omitempty"`
	Image          *Image     `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
	Notes          []Note     `protobuf:"varint,3,rep,packed,name=notes,proto3,enum=scannerV1.Note" json:"notes,omitempty"`
}

func (x *GetImageScanResponse) Reset() {
	*x = GetImageScanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImageScanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageScanResponse) ProtoMessage() {}

func (x *GetImageScanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageScanResponse.ProtoReflect.Descriptor instead.
func (*GetImageScanResponse) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_image_scan_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetImageScanResponse) GetScannerVersion() string {
	if x != nil {
		return x.ScannerVersion
	}
	return ""
}

func (x *GetImageScanResponse) GetStatus() ScanStatus {
	if x != nil {
		return x.Status
	}
	return ScanStatus_UNSET
}

func (x *GetImageScanResponse) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *GetImageScanResponse) GetNotes() []Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

type GetImageComponentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image    string        `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Registry *RegistryData `protobuf:"bytes,2,opt,name=registry,proto3" json:"registry,omitempty"`
}

func (x *GetImageComponentsRequest) Reset() {
	*x = GetImageComponentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImageComponentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageComponentsRequest) ProtoMessage() {}

func (x *GetImageComponentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageComponentsRequest.ProtoReflect.Descriptor instead.
func (*GetImageComponentsRequest) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_image_scan_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetImageComponentsRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *GetImageComponentsRequest) GetRegistry() *RegistryData {
	if x != nil {
		return x.Registry
	}
	return nil
}

// Next tag: 5
type GetImageComponentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScannerVersion string      `protobuf:"bytes,4,opt,name=scanner_version,json=scannerVersion,proto3" json:"scanner_version,omitempty"`
	Status         ScanStatus  `protobuf:"varint,1,opt,name=status,proto3,enum=scannerV1.ScanStatus" json:"status,omitempty"`
	Components     *Components `protobuf:"bytes,2,opt,name=components,proto3" json:"components,omitempty"`
	Notes          []Note      `protobuf:"varint,3,rep,packed,name=notes,proto3,enum=scannerV1.Note" json:"notes,omitempty"`
}

func (x *GetImageComponentsResponse) Reset() {
	*x = GetImageComponentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImageComponentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageComponentsResponse) ProtoMessage() {}

func (x *GetImageComponentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageComponentsResponse.ProtoReflect.Descriptor instead.
func (*GetImageComponentsResponse) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_image_scan_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetImageComponentsResponse) GetScannerVersion() string {
	if x != nil {
		return x.ScannerVersion
	}
	return ""
}

func (x *GetImageComponentsResponse) GetStatus() ScanStatus {
	if x != nil {
		return x.Status
	}
	return ScanStatus_UNSET
}

func (x *GetImageComponentsResponse) GetComponents() *Components {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *GetImageComponentsResponse) GetNotes() []Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

// Next tag: 4
type GetImageVulnerabilitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image      string      `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Components *Components `protobuf:"bytes,1,opt,name=components,proto3" json:"components,omitempty"`
	Notes      []Note      `protobuf:"varint,2,rep,packed,name=notes,proto3,enum=scannerV1.Note" json:"notes,omitempty"`
}

func (x *GetImageVulnerabilitiesRequest) Reset() {
	*x = GetImageVulnerabilitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImageVulnerabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageVulnerabilitiesRequest) ProtoMessage() {}

func (x *GetImageVulnerabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageVulnerabilitiesRequest.ProtoReflect.Descriptor instead.
func (*GetImageVulnerabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_image_scan_service_proto_rawDescGZIP(), []int{6}
}

func (x *GetImageVulnerabilitiesRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *GetImageVulnerabilitiesRequest) GetComponents() *Components {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *GetImageVulnerabilitiesRequest) GetNotes() []Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

type GetImageVulnerabilitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScannerVersion string     `protobuf:"bytes,3,opt,name=scanner_version,json=scannerVersion,proto3" json:"scanner_version,omitempty"`
	Status         ScanStatus `protobuf:"varint,1,opt,name=status,proto3,enum=scannerV1.ScanStatus" json:"status,omitempty"`
	Image          *Image     `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *GetImageVulnerabilitiesResponse) Reset() {
	*x = GetImageVulnerabilitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetImageVulnerabilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetImageVulnerabilitiesResponse) ProtoMessage() {}

func (x *GetImageVulnerabilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetImageVulnerabilitiesResponse.ProtoReflect.Descriptor instead.
func (*GetImageVulnerabilitiesResponse) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_image_scan_service_proto_rawDescGZIP(), []int{7}
}

func (x *GetImageVulnerabilitiesResponse) GetScannerVersion() string {
	if x != nil {
		return x.ScannerVersion
	}
	return ""
}

func (x *GetImageVulnerabilitiesResponse) GetStatus() ScanStatus {
	if x != nil {
		return x.Status
	}
	return ScanStatus_UNSET
}

func (x *GetImageVulnerabilitiesResponse) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

type GetLanguageLevelComponentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Only one of the fields in ImageSpec needs to be set for the request to be properly formed
	// If both are set, then digest is used
	ImageSpec *ImageSpec `protobuf:"bytes,1,opt,name=image_spec,json=imageSpec,proto3" json:"image_spec,omitempty"`
	// uncertifiedRHEL set to `true` tells the Scanner to
	// return uncertified scan results for the given RHEL-based image
	// (if the image is RHEL-based).
	UncertifiedRHEL bool `protobuf:"varint,2,opt,name=uncertifiedRHEL,proto3" json:"uncertifiedRHEL,omitempty"`
}

func (x *GetLanguageLevelComponentsRequest) Reset() {
	*x = GetLanguageLevelComponentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLanguageLevelComponentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguageLevelComponentsRequest) ProtoMessage() {}

func (x *GetLanguageLevelComponentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguageLevelComponentsRequest.ProtoReflect.Descriptor instead.
func (*GetLanguageLevelComponentsRequest) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_image_scan_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetLanguageLevelComponentsRequest) GetImageSpec() *ImageSpec {
	if x != nil {
		return x.ImageSpec
	}
	return nil
}

func (x *GetLanguageLevelComponentsRequest) GetUncertifiedRHEL() bool {
	if x != nil {
		return x.UncertifiedRHEL
	}
	return false
}

type GetLanguageLevelComponentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScannerVersion    string                              `protobuf:"bytes,2,opt,name=scanner_version,json=scannerVersion,proto3" json:"scanner_version,omitempty"`
	LayerToComponents map[string]*LanguageLevelComponents `protobuf:"bytes,1,rep,name=layer_to_components,json=layerToComponents,proto3" json:"layer_to_components,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetLanguageLevelComponentsResponse) Reset() {
	*x = GetLanguageLevelComponentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLanguageLevelComponentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguageLevelComponentsResponse) ProtoMessage() {}

func (x *GetLanguageLevelComponentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguageLevelComponentsResponse.ProtoReflect.Descriptor instead.
func (*GetLanguageLevelComponentsResponse) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_image_scan_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetLanguageLevelComponentsResponse) GetScannerVersion() string {
	if x != nil {
		return x.ScannerVersion
	}
	return ""
}

func (x *GetLanguageLevelComponentsResponse) GetLayerToComponents() map[string]*LanguageLevelComponents {
	if x != nil {
		return x.LayerToComponents
	}
	return nil
}

type ImageSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Digest string `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"`
	Image  string `protobuf:"bytes,2,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *ImageSpec) Reset() {
	*x = ImageSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageSpec) ProtoMessage() {}

func (x *ImageSpec) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageSpec.ProtoReflect.Descriptor instead.
func (*ImageSpec) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_image_scan_service_proto_rawDescGZIP(), []int{10}
}

func (x *ImageSpec) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *ImageSpec) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type RegistryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url      string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	Insecure bool   `protobuf:"varint,4,opt,name=insecure,proto3" json:"insecure,omitempty"`
}

func (x *RegistryData) Reset() {
	*x = RegistryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegistryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistryData) ProtoMessage() {}

func (x *RegistryData) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistryData.ProtoReflect.Descriptor instead.
func (*RegistryData) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_image_scan_service_proto_rawDescGZIP(), []int{11}
}

func (x *RegistryData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RegistryData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegistryData) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegistryData) GetInsecure() bool {
	if x != nil {
		return x.Insecure
	}
	return false
}

type LanguageLevelComponents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Components []*LanguageLevelComponent `protobuf:"bytes,1,rep,name=components,proto3" json:"components,omitempty"`
}

func (x *LanguageLevelComponents) Reset() {
	*x = LanguageLevelComponents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LanguageLevelComponents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguageLevelComponents) ProtoMessage() {}

func (x *LanguageLevelComponents) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguageLevelComponents.ProtoReflect.Descriptor instead.
func (*LanguageLevelComponents) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_image_scan_service_proto_rawDescGZIP(), []int{12}
}

func (x *LanguageLevelComponents) GetComponents() []*LanguageLevelComponent {
	if x != nil {
		return x.Components
	}
	return nil
}

type LanguageLevelComponent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceType SourceType `protobuf:"varint,1,opt,name=source_type,json=sourceType,proto3,enum=scannerV1.SourceType" json:"source_type,omitempty"`
	Name       string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Version    string     `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Location   string     `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *LanguageLevelComponent) Reset() {
	*x = LanguageLevelComponent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LanguageLevelComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LanguageLevelComponent) ProtoMessage() {}

func (x *LanguageLevelComponent) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_image_scan_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LanguageLevelComponent.ProtoReflect.Descriptor instead.
func (*LanguageLevelComponent) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_image_scan_service_proto_rawDescGZIP(), []int{13}
}

func (x *LanguageLevelComponent) GetSourceType() SourceType {
	if x != nil {
		return x.SourceType
	}
	return SourceType_UNSET_SOURCE_TYPE
}

func (x *LanguageLevelComponent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LanguageLevelComponent) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *LanguageLevelComponent) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

var File_scanner_api_v1_image_scan_service_proto protoreflect.FileDescriptor

var file_scanner_api_v1_image_scan_service_proto_rawDesc = []byte{
	0x0a, 0x27, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x63, 0x61, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x56, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1a, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19,
	0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6e,
	0x6f, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x10, 0x53, 0x63,
	0x61, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x56, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x6e, 0x63,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x52, 0x48, 0x45, 0x4c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x75, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x52,
	0x48, 0x45, 0x4c, 0x22, 0x97, 0x01, 0x0a, 0x11, 0x53, 0x63, 0x61, 0x6e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x63, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x53,
	0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x74, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x56, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x09,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x6e, 0x63,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x52, 0x48, 0x45, 0x4c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0f, 0x75, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x52,
	0x48, 0x45, 0x4c, 0x22, 0xbd, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56,
	0x31, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x05,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x73, 0x63,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x05, 0x6e, 0x6f,
	0x74, 0x65, 0x73, 0x22, 0x66, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x56, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x08, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x22, 0xd2, 0x01, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x63,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e,
	0x53, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x35, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x56, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x6e, 0x6f, 0x74,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x56, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73,
	0x22, 0x94, 0x01, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x56, 0x75, 0x6c,
	0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x25, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x4e, 0x6f, 0x74, 0x65,
	0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x22, 0xa1, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31,
	0x2e, 0x53, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x21,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x33, 0x0a, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56,
	0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x52, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x6e, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x52, 0x48, 0x45, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x75, 0x6e, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x52, 0x48, 0x45, 0x4c,
	0x22, 0xad, 0x02, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x74, 0x0a, 0x13, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e,
	0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x54, 0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x11, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x6f, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x68, 0x0a, 0x16, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x54,
	0x6f, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x39, 0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x74, 0x0a, 0x0c, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x6e, 0x73, 0x65, 0x63, 0x75, 0x72,
	0x65, 0x22, 0x5c, 0x0a, 0x17, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x0a,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x4c, 0x61, 0x6e,
	0x67, 0x75, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x9a, 0x01, 0x0a, 0x16, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x41, 0x0a, 0x0a,
	0x53, 0x63, 0x61, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x4e,
	0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x4e, 0x41, 0x4c, 0x59, 0x5a, 0x49,
	0x4e, 0x47, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02,
	0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x43, 0x43, 0x45, 0x45, 0x44, 0x45, 0x44, 0x10, 0x03, 0x32,
	0xdc, 0x04, 0x0a, 0x10, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x09, 0x53, 0x63, 0x61, 0x6e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x1b, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x53, 0x63,
	0x61, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x53, 0x63, 0x61, 0x6e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x2f, 0x73, 0x63, 0x61, 0x6e, 0x12, 0x68, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x12, 0x1e, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x56, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x63, 0x61,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x56, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x53, 0x63, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x73, 0x63,
	0x61, 0x6e, 0x12, 0x63, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x24, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x56, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25,
	0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x29, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e,
	0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa0, 0x01, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2c, 0x2e, 0x73, 0x63, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x56, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12,
	0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x2f, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x2d,
	0x0a, 0x20, 0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x72, 0x6f, 0x78, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x5a, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x58, 0x00, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scanner_api_v1_image_scan_service_proto_rawDescOnce sync.Once
	file_scanner_api_v1_image_scan_service_proto_rawDescData = file_scanner_api_v1_image_scan_service_proto_rawDesc
)

func file_scanner_api_v1_image_scan_service_proto_rawDescGZIP() []byte {
	file_scanner_api_v1_image_scan_service_proto_rawDescOnce.Do(func() {
		file_scanner_api_v1_image_scan_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_scanner_api_v1_image_scan_service_proto_rawDescData)
	})
	return file_scanner_api_v1_image_scan_service_proto_rawDescData
}

var file_scanner_api_v1_image_scan_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_scanner_api_v1_image_scan_service_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_scanner_api_v1_image_scan_service_proto_goTypes = []any{
	(ScanStatus)(0),                            // 0: scannerV1.ScanStatus
	(*ScanImageRequest)(nil),                   // 1: scannerV1.ScanImageRequest
	(*ScanImageResponse)(nil),                  // 2: scannerV1.ScanImageResponse
	(*GetImageScanRequest)(nil),                // 3: scannerV1.GetImageScanRequest
	(*GetImageScanResponse)(nil),               // 4: scannerV1.GetImageScanResponse
	(*GetImageComponentsRequest)(nil),          // 5: scannerV1.GetImageComponentsRequest
	(*GetImageComponentsResponse)(nil),         // 6: scannerV1.GetImageComponentsResponse
	(*GetImageVulnerabilitiesRequest)(nil),     // 7: scannerV1.GetImageVulnerabilitiesRequest
	(*GetImageVulnerabilitiesResponse)(nil),    // 8: scannerV1.GetImageVulnerabilitiesResponse
	(*GetLanguageLevelComponentsRequest)(nil),  // 9: scannerV1.GetLanguageLevelComponentsRequest
	(*GetLanguageLevelComponentsResponse)(nil), // 10: scannerV1.GetLanguageLevelComponentsResponse
	(*ImageSpec)(nil),                          // 11: scannerV1.ImageSpec
	(*RegistryData)(nil),                       // 12: scannerV1.RegistryData
	(*LanguageLevelComponents)(nil),            // 13: scannerV1.LanguageLevelComponents
	(*LanguageLevelComponent)(nil),             // 14: scannerV1.LanguageLevelComponent
	nil,                                        // 15: scannerV1.GetLanguageLevelComponentsResponse.LayerToComponentsEntry
	(*Image)(nil),                              // 16: scannerV1.Image
	(Note)(0),                                  // 17: scannerV1.Note
	(*Components)(nil),                         // 18: scannerV1.Components
	(SourceType)(0),                            // 19: scannerV1.SourceType
}
var file_scanner_api_v1_image_scan_service_proto_depIdxs = []int32{
	12, // 0: scannerV1.ScanImageRequest.registry:type_name -> scannerV1.RegistryData
	0,  // 1: scannerV1.ScanImageResponse.status:type_name -> scannerV1.ScanStatus
	11, // 2: scannerV1.ScanImageResponse.image:type_name -> scannerV1.ImageSpec
	11, // 3: scannerV1.GetImageScanRequest.image_spec:type_name -> scannerV1.ImageSpec
	0,  // 4: scannerV1.GetImageScanResponse.status:type_name -> scannerV1.ScanStatus
	16, // 5: scannerV1.GetImageScanResponse.image:type_name -> scannerV1.Image
	17, // 6: scannerV1.GetImageScanResponse.notes:type_name -> scannerV1.Note
	12, // 7: scannerV1.GetImageComponentsRequest.registry:type_name -> scannerV1.RegistryData
	0,  // 8: scannerV1.GetImageComponentsResponse.status:type_name -> scannerV1.ScanStatus
	18, // 9: scannerV1.GetImageComponentsResponse.components:type_name -> scannerV1.Components
	17, // 10: scannerV1.GetImageComponentsResponse.notes:type_name -> scannerV1.Note
	18, // 11: scannerV1.GetImageVulnerabilitiesRequest.components:type_name -> scannerV1.Components
	17, // 12: scannerV1.GetImageVulnerabilitiesRequest.notes:type_name -> scannerV1.Note
	0,  // 13: scannerV1.GetImageVulnerabilitiesResponse.status:type_name -> scannerV1.ScanStatus
	16, // 14: scannerV1.GetImageVulnerabilitiesResponse.image:type_name -> scannerV1.Image
	11, // 15: scannerV1.GetLanguageLevelComponentsRequest.image_spec:type_name -> scannerV1.ImageSpec
	15, // 16: scannerV1.GetLanguageLevelComponentsResponse.layer_to_components:type_name -> scannerV1.GetLanguageLevelComponentsResponse.LayerToComponentsEntry
	14, // 17: scannerV1.LanguageLevelComponents.components:type_name -> scannerV1.LanguageLevelComponent
	19, // 18: scannerV1.LanguageLevelComponent.source_type:type_name -> scannerV1.SourceType
	13, // 19: scannerV1.GetLanguageLevelComponentsResponse.LayerToComponentsEntry.value:type_name -> scannerV1.LanguageLevelComponents
	1,  // 20: scannerV1.ImageScanService.ScanImage:input_type -> scannerV1.ScanImageRequest
	3,  // 21: scannerV1.ImageScanService.GetImageScan:input_type -> scannerV1.GetImageScanRequest
	5,  // 22: scannerV1.ImageScanService.GetImageComponents:input_type -> scannerV1.GetImageComponentsRequest
	7,  // 23: scannerV1.ImageScanService.GetImageVulnerabilities:input_type -> scannerV1.GetImageVulnerabilitiesRequest
	9,  // 24: scannerV1.ImageScanService.GetLanguageLevelComponents:input_type -> scannerV1.GetLanguageLevelComponentsRequest
	2,  // 25: scannerV1.ImageScanService.ScanImage:output_type -> scannerV1.ScanImageResponse
	4,  // 26: scannerV1.ImageScanService.GetImageScan:output_type -> scannerV1.GetImageScanResponse
	6,  // 27: scannerV1.ImageScanService.GetImageComponents:output_type -> scannerV1.GetImageComponentsResponse
	8,  // 28: scannerV1.ImageScanService.GetImageVulnerabilities:output_type -> scannerV1.GetImageVulnerabilitiesResponse
	10, // 29: scannerV1.ImageScanService.GetLanguageLevelComponents:output_type -> scannerV1.GetLanguageLevelComponentsResponse
	25, // [25:30] is the sub-list for method output_type
	20, // [20:25] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_scanner_api_v1_image_scan_service_proto_init() }
func file_scanner_api_v1_image_scan_service_proto_init() {
	if File_scanner_api_v1_image_scan_service_proto != nil {
		return
	}
	file_scanner_api_v1_component_proto_init()
	file_scanner_api_v1_image_proto_init()
	file_scanner_api_v1_note_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_scanner_api_v1_image_scan_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ScanImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_api_v1_image_scan_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ScanImageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_api_v1_image_scan_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetImageScanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_api_v1_image_scan_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetImageScanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_api_v1_image_scan_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetImageComponentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_api_v1_image_scan_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetImageComponentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_api_v1_image_scan_service_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*GetImageVulnerabilitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_api_v1_image_scan_service_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetImageVulnerabilitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_api_v1_image_scan_service_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetLanguageLevelComponentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_api_v1_image_scan_service_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetLanguageLevelComponentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_api_v1_image_scan_service_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ImageSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_api_v1_image_scan_service_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*RegistryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_api_v1_image_scan_service_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*LanguageLevelComponents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_api_v1_image_scan_service_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*LanguageLevelComponent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scanner_api_v1_image_scan_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scanner_api_v1_image_scan_service_proto_goTypes,
		DependencyIndexes: file_scanner_api_v1_image_scan_service_proto_depIdxs,
		EnumInfos:         file_scanner_api_v1_image_scan_service_proto_enumTypes,
		MessageInfos:      file_scanner_api_v1_image_scan_service_proto_msgTypes,
	}.Build()
	File_scanner_api_v1_image_scan_service_proto = out.File
	file_scanner_api_v1_image_scan_service_proto_rawDesc = nil
	file_scanner_api_v1_image_scan_service_proto_goTypes = nil
	file_scanner_api_v1_image_scan_service_proto_depIdxs = nil
}
