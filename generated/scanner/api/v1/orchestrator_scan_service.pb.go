// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.4
// source: scanner/api/v1/orchestrator_scan_service.proto

package scannerV1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetKubeVulnerabilitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KubernetesVersion string `protobuf:"bytes,1,opt,name=kubernetes_version,json=kubernetesVersion,proto3" json:"kubernetes_version,omitempty"`
}

func (x *GetKubeVulnerabilitiesRequest) Reset() {
	*x = GetKubeVulnerabilitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKubeVulnerabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKubeVulnerabilitiesRequest) ProtoMessage() {}

func (x *GetKubeVulnerabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKubeVulnerabilitiesRequest.ProtoReflect.Descriptor instead.
func (*GetKubeVulnerabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_orchestrator_scan_service_proto_rawDescGZIP(), []int{0}
}

func (x *GetKubeVulnerabilitiesRequest) GetKubernetesVersion() string {
	if x != nil {
		return x.KubernetesVersion
	}
	return ""
}

// Next tag: 7
type GetKubeVulnerabilitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScannerVersion                   string           `protobuf:"bytes,6,opt,name=scanner_version,json=scannerVersion,proto3" json:"scanner_version,omitempty"`
	AggregatorVulnerabilities        []*Vulnerability `protobuf:"bytes,1,rep,name=aggregator_vulnerabilities,json=aggregatorVulnerabilities,proto3" json:"aggregator_vulnerabilities,omitempty"`
	ApiserverVulnerabilities         []*Vulnerability `protobuf:"bytes,2,rep,name=apiserver_vulnerabilities,json=apiserverVulnerabilities,proto3" json:"apiserver_vulnerabilities,omitempty"`
	ControllerManagerVulnerabilities []*Vulnerability `protobuf:"bytes,3,rep,name=controller_manager_vulnerabilities,json=controllerManagerVulnerabilities,proto3" json:"controller_manager_vulnerabilities,omitempty"`
	SchedulerVulnerabilities         []*Vulnerability `protobuf:"bytes,4,rep,name=scheduler_vulnerabilities,json=schedulerVulnerabilities,proto3" json:"scheduler_vulnerabilities,omitempty"`
	GenericVulnerabilities           []*Vulnerability `protobuf:"bytes,5,rep,name=generic_vulnerabilities,json=genericVulnerabilities,proto3" json:"generic_vulnerabilities,omitempty"`
}

func (x *GetKubeVulnerabilitiesResponse) Reset() {
	*x = GetKubeVulnerabilitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKubeVulnerabilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKubeVulnerabilitiesResponse) ProtoMessage() {}

func (x *GetKubeVulnerabilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKubeVulnerabilitiesResponse.ProtoReflect.Descriptor instead.
func (*GetKubeVulnerabilitiesResponse) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_orchestrator_scan_service_proto_rawDescGZIP(), []int{1}
}

func (x *GetKubeVulnerabilitiesResponse) GetScannerVersion() string {
	if x != nil {
		return x.ScannerVersion
	}
	return ""
}

func (x *GetKubeVulnerabilitiesResponse) GetAggregatorVulnerabilities() []*Vulnerability {
	if x != nil {
		return x.AggregatorVulnerabilities
	}
	return nil
}

func (x *GetKubeVulnerabilitiesResponse) GetApiserverVulnerabilities() []*Vulnerability {
	if x != nil {
		return x.ApiserverVulnerabilities
	}
	return nil
}

func (x *GetKubeVulnerabilitiesResponse) GetControllerManagerVulnerabilities() []*Vulnerability {
	if x != nil {
		return x.ControllerManagerVulnerabilities
	}
	return nil
}

func (x *GetKubeVulnerabilitiesResponse) GetSchedulerVulnerabilities() []*Vulnerability {
	if x != nil {
		return x.SchedulerVulnerabilities
	}
	return nil
}

func (x *GetKubeVulnerabilitiesResponse) GetGenericVulnerabilities() []*Vulnerability {
	if x != nil {
		return x.GenericVulnerabilities
	}
	return nil
}

type GetIstioVulnerabilitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IstioVersion string `protobuf:"bytes,1,opt,name=istio_version,json=istioVersion,proto3" json:"istio_version,omitempty"`
}

func (x *GetIstioVulnerabilitiesRequest) Reset() {
	*x = GetIstioVulnerabilitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIstioVulnerabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIstioVulnerabilitiesRequest) ProtoMessage() {}

func (x *GetIstioVulnerabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIstioVulnerabilitiesRequest.ProtoReflect.Descriptor instead.
func (*GetIstioVulnerabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_orchestrator_scan_service_proto_rawDescGZIP(), []int{2}
}

func (x *GetIstioVulnerabilitiesRequest) GetIstioVersion() string {
	if x != nil {
		return x.IstioVersion
	}
	return ""
}

type GetIstioVulnerabilitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScannerVersion  string           `protobuf:"bytes,1,opt,name=scanner_version,json=scannerVersion,proto3" json:"scanner_version,omitempty"`
	Vulnerabilities []*Vulnerability `protobuf:"bytes,2,rep,name=vulnerabilities,proto3" json:"vulnerabilities,omitempty"`
}

func (x *GetIstioVulnerabilitiesResponse) Reset() {
	*x = GetIstioVulnerabilitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIstioVulnerabilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIstioVulnerabilitiesResponse) ProtoMessage() {}

func (x *GetIstioVulnerabilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIstioVulnerabilitiesResponse.ProtoReflect.Descriptor instead.
func (*GetIstioVulnerabilitiesResponse) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_orchestrator_scan_service_proto_rawDescGZIP(), []int{3}
}

func (x *GetIstioVulnerabilitiesResponse) GetScannerVersion() string {
	if x != nil {
		return x.ScannerVersion
	}
	return ""
}

func (x *GetIstioVulnerabilitiesResponse) GetVulnerabilities() []*Vulnerability {
	if x != nil {
		return x.Vulnerabilities
	}
	return nil
}

type GetOpenShiftVulnerabilitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenShiftVersion string `protobuf:"bytes,1,opt,name=openShift_version,json=openShiftVersion,proto3" json:"openShift_version,omitempty"`
}

func (x *GetOpenShiftVulnerabilitiesRequest) Reset() {
	*x = GetOpenShiftVulnerabilitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOpenShiftVulnerabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpenShiftVulnerabilitiesRequest) ProtoMessage() {}

func (x *GetOpenShiftVulnerabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpenShiftVulnerabilitiesRequest.ProtoReflect.Descriptor instead.
func (*GetOpenShiftVulnerabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_orchestrator_scan_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetOpenShiftVulnerabilitiesRequest) GetOpenShiftVersion() string {
	if x != nil {
		return x.OpenShiftVersion
	}
	return ""
}

type GetOpenShiftVulnerabilitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScannerVersion  string           `protobuf:"bytes,2,opt,name=scanner_version,json=scannerVersion,proto3" json:"scanner_version,omitempty"`
	Vulnerabilities []*Vulnerability `protobuf:"bytes,1,rep,name=vulnerabilities,proto3" json:"vulnerabilities,omitempty"`
}

func (x *GetOpenShiftVulnerabilitiesResponse) Reset() {
	*x = GetOpenShiftVulnerabilitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOpenShiftVulnerabilitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpenShiftVulnerabilitiesResponse) ProtoMessage() {}

func (x *GetOpenShiftVulnerabilitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpenShiftVulnerabilitiesResponse.ProtoReflect.Descriptor instead.
func (*GetOpenShiftVulnerabilitiesResponse) Descriptor() ([]byte, []int) {
	return file_scanner_api_v1_orchestrator_scan_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetOpenShiftVulnerabilitiesResponse) GetScannerVersion() string {
	if x != nil {
		return x.ScannerVersion
	}
	return ""
}

func (x *GetOpenShiftVulnerabilitiesResponse) GetVulnerabilities() []*Vulnerability {
	if x != nil {
		return x.Vulnerabilities
	}
	return nil
}

var File_scanner_api_v1_orchestrator_scan_service_proto protoreflect.FileDescriptor

var file_scanner_api_v1_orchestrator_scan_service_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x63,
	0x61, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x73, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4e, 0x0a,
	0x1d, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x12, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x5f, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x8b, 0x04,
	0x0a, 0x1e, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x57, 0x0a, 0x1a, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x19, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x6f, 0x72, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x55, 0x0a, 0x19, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56,
	0x31, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x18, 0x61, 0x70, 0x69, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x22, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x5f,
	0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56,
	0x31, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52,
	0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x55, 0x0a, 0x19, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x5f, 0x76,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31,
	0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x18,
	0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x51, 0x0a, 0x17, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x69, 0x63, 0x5f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x63, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x52, 0x16, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x56, 0x75, 0x6c, 0x6e,
	0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x45, 0x0a, 0x1e, 0x47,
	0x65, 0x74, 0x49, 0x73, 0x74, 0x69, 0x6f, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x8e, 0x01, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x49, 0x73, 0x74, 0x69, 0x6f, 0x56,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x42, 0x0a, 0x0f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x56, 0x31, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x52, 0x0f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x68,
	0x69, 0x66, 0x74, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x70, 0x65,
	0x6e, 0x53, 0x68, 0x69, 0x66, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x70, 0x65, 0x6e, 0x53, 0x68, 0x69, 0x66, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x92, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x4f, 0x70,
	0x65, 0x6e, 0x53, 0x68, 0x69, 0x66, 0x74, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0f, 0x76, 0x75, 0x6c, 0x6e, 0x65,
	0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x56, 0x75, 0x6c,
	0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x76, 0x75, 0x6c, 0x6e,
	0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x32, 0x9e, 0x04, 0x0a, 0x17,
	0x4f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x63, 0x61, 0x6e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4b,
	0x75, 0x62, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x28, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x4b, 0x75, 0x62, 0x65, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x73,
	0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x75, 0x62, 0x65,
	0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x12,
	0x25, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x2f, 0x6b, 0x75, 0x62, 0x65, 0x2f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0xb0, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4f, 0x70,
	0x65, 0x6e, 0x53, 0x68, 0x69, 0x66, 0x74, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2d, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x56, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x68, 0x69, 0x66, 0x74, 0x56,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x68, 0x69, 0x66, 0x74, 0x56, 0x75,
	0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x12, 0x2a, 0x2f,
	0x76, 0x31, 0x2f, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f,
	0x6f, 0x70, 0x65, 0x6e, 0x73, 0x68, 0x69, 0x66, 0x74, 0x2f, 0x76, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0xb0, 0x01, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x49, 0x73, 0x74, 0x69, 0x6f, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x29, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x73, 0x74, 0x69, 0x6f, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2a, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x49, 0x73, 0x74, 0x69, 0x6f, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x38, 0x12, 0x36, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x72, 0x63, 0x68, 0x65, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x2f, 0x76, 0x75, 0x6c,
	0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x73,
	0x74, 0x69, 0x6f, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x7d, 0x42, 0x2d, 0x0a, 0x20,
	0x69, 0x6f, 0x2e, 0x73, 0x74, 0x61, 0x63, 0x6b, 0x72, 0x6f, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x5a, 0x09, 0x73, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x56, 0x31, 0x58, 0x00, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scanner_api_v1_orchestrator_scan_service_proto_rawDescOnce sync.Once
	file_scanner_api_v1_orchestrator_scan_service_proto_rawDescData = file_scanner_api_v1_orchestrator_scan_service_proto_rawDesc
)

func file_scanner_api_v1_orchestrator_scan_service_proto_rawDescGZIP() []byte {
	file_scanner_api_v1_orchestrator_scan_service_proto_rawDescOnce.Do(func() {
		file_scanner_api_v1_orchestrator_scan_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_scanner_api_v1_orchestrator_scan_service_proto_rawDescData)
	})
	return file_scanner_api_v1_orchestrator_scan_service_proto_rawDescData
}

var file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_scanner_api_v1_orchestrator_scan_service_proto_goTypes = []any{
	(*GetKubeVulnerabilitiesRequest)(nil),       // 0: scannerV1.GetKubeVulnerabilitiesRequest
	(*GetKubeVulnerabilitiesResponse)(nil),      // 1: scannerV1.GetKubeVulnerabilitiesResponse
	(*GetIstioVulnerabilitiesRequest)(nil),      // 2: scannerV1.GetIstioVulnerabilitiesRequest
	(*GetIstioVulnerabilitiesResponse)(nil),     // 3: scannerV1.GetIstioVulnerabilitiesResponse
	(*GetOpenShiftVulnerabilitiesRequest)(nil),  // 4: scannerV1.GetOpenShiftVulnerabilitiesRequest
	(*GetOpenShiftVulnerabilitiesResponse)(nil), // 5: scannerV1.GetOpenShiftVulnerabilitiesResponse
	(*Vulnerability)(nil),                       // 6: scannerV1.Vulnerability
}
var file_scanner_api_v1_orchestrator_scan_service_proto_depIdxs = []int32{
	6,  // 0: scannerV1.GetKubeVulnerabilitiesResponse.aggregator_vulnerabilities:type_name -> scannerV1.Vulnerability
	6,  // 1: scannerV1.GetKubeVulnerabilitiesResponse.apiserver_vulnerabilities:type_name -> scannerV1.Vulnerability
	6,  // 2: scannerV1.GetKubeVulnerabilitiesResponse.controller_manager_vulnerabilities:type_name -> scannerV1.Vulnerability
	6,  // 3: scannerV1.GetKubeVulnerabilitiesResponse.scheduler_vulnerabilities:type_name -> scannerV1.Vulnerability
	6,  // 4: scannerV1.GetKubeVulnerabilitiesResponse.generic_vulnerabilities:type_name -> scannerV1.Vulnerability
	6,  // 5: scannerV1.GetIstioVulnerabilitiesResponse.vulnerabilities:type_name -> scannerV1.Vulnerability
	6,  // 6: scannerV1.GetOpenShiftVulnerabilitiesResponse.vulnerabilities:type_name -> scannerV1.Vulnerability
	0,  // 7: scannerV1.OrchestratorScanService.GetKubeVulnerabilities:input_type -> scannerV1.GetKubeVulnerabilitiesRequest
	4,  // 8: scannerV1.OrchestratorScanService.GetOpenShiftVulnerabilities:input_type -> scannerV1.GetOpenShiftVulnerabilitiesRequest
	2,  // 9: scannerV1.OrchestratorScanService.GetIstioVulnerabilities:input_type -> scannerV1.GetIstioVulnerabilitiesRequest
	1,  // 10: scannerV1.OrchestratorScanService.GetKubeVulnerabilities:output_type -> scannerV1.GetKubeVulnerabilitiesResponse
	5,  // 11: scannerV1.OrchestratorScanService.GetOpenShiftVulnerabilities:output_type -> scannerV1.GetOpenShiftVulnerabilitiesResponse
	3,  // 12: scannerV1.OrchestratorScanService.GetIstioVulnerabilities:output_type -> scannerV1.GetIstioVulnerabilitiesResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_scanner_api_v1_orchestrator_scan_service_proto_init() }
func file_scanner_api_v1_orchestrator_scan_service_proto_init() {
	if File_scanner_api_v1_orchestrator_scan_service_proto != nil {
		return
	}
	file_scanner_api_v1_vulnerability_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetKubeVulnerabilitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetKubeVulnerabilitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetIstioVulnerabilitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetIstioVulnerabilitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetOpenShiftVulnerabilitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*GetOpenShiftVulnerabilitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scanner_api_v1_orchestrator_scan_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scanner_api_v1_orchestrator_scan_service_proto_goTypes,
		DependencyIndexes: file_scanner_api_v1_orchestrator_scan_service_proto_depIdxs,
		MessageInfos:      file_scanner_api_v1_orchestrator_scan_service_proto_msgTypes,
	}.Build()
	File_scanner_api_v1_orchestrator_scan_service_proto = out.File
	file_scanner_api_v1_orchestrator_scan_service_proto_rawDesc = nil
	file_scanner_api_v1_orchestrator_scan_service_proto_goTypes = nil
	file_scanner_api_v1_orchestrator_scan_service_proto_depIdxs = nil
}
