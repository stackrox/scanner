apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}-db
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.appName }}-db
spec:
  replicas: 1
  minReadySeconds: 15
  selector:
    matchLabels:
      app: {{ .Values.appName }}-db
  template:
    metadata:
      namespace: {{ .Values.namespace }}
      labels:
        app: {{ .Values.appName }}-db
    spec:
      initContainers:
      - name: init-db
        image: {{.Values.scannerDBImage}}:{{.Values.tag}}
        env:
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        command:
        - /bin/sh
        - -c
        - |
          # Initialize DB if it does not exist
          if [ ! -s "$PGDATA/PG_VERSION" ]; then
            docker-entrypoint.sh initdb --pwfile /run/secrets/stackrox.io/secrets/password
          fi
        volumeMounts:
        - name: scanner-db-data
          mountPath: /var/lib/postgresql/data
        - name: scanner-db-password
          mountPath: /run/secrets/stackrox.io/secrets
          readOnly: true
        securityContext:
          runAsUser: 70
          runAsGroup: 70
      containers:
      - name: db
        image: {{.Values.scannerDBImage}}:{{.Values.tag}}
        env:
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        ports:
        - name: postgresql
          protocol: TCP
          containerPort: 5432
        resources:
          limits:
            cpu: 2
            memory: 4Gi
          requests:
            cpu: 200m
            memory: 200Mi
        volumeMounts:
          - name: scanner-db-data
            mountPath: /var/lib/postgresql/data
          - name: scanner-db-tls-volume
            mountPath: /run/secrets/stackrox.io/certs
        securityContext:
          runAsUser: 70
          runAsGroup: 70
      securityContext:
        fsGroup: 70
      volumes:
      - name: config
        configMap:
          name: {{ .Values.appName }}-config
      - name: scanner-db-data
        emptyDir: {}
      - name: scanner-db-tls-volume
        secret:
          secretName: scanner-db-tls
          defaultMode: 0640
          items:
          - key: cert.pem
            path: server.crt
          - key: key.pem
            path: server.key
          - key: ca.pem
            path: root.crt
      - name: scanner-db-password
        secret:
          secretName: scanner-db-password
