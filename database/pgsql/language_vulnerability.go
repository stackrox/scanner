package pgsql

import (
	"encoding/json"
	"fmt"

	"github.com/stackrox/scanner/database"
	"github.com/stackrox/scanner/pkg/component"
)

func (pgSQL *pgSQL) InsertLayerComponents(l database.Layer, c []*component.Component) error {
	// todo(cgorman) evaluate if we should hash marshalled component bytes and do lookups instead

	data, err := json.Marshal(c)
	if err != nil {
		return err
	}

	_, err = pgSQL.Exec(`INSERT INTO LanguageLayer(layer_name, component_data)
	VALUES ($1, $2); `, l.Name, data)
	return err
}

func (pgSQL *pgSQL) GetLayerLanguageComponents(layer string) ([]*component.Component, error) {
	rows, err := pgSQL.Query("SELECT component_data FROM LanguageLayer WHERE layer_name = $1", layer)
	if err != nil {
		return nil, err
	}
	defer rows.Close()

	if !rows.Next() {
		return nil, fmt.Errorf("could not find layer %q for language components", layer)
	}

	var data []byte
	if err := rows.Scan(&data); err != nil {
		return nil, err
	}
	var components []*component.Component
	if err := json.Unmarshal(data, &components); err != nil {
		return nil, err
	}
	return components, nil
}
