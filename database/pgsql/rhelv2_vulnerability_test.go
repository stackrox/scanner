// +build db_integration

package pgsql

import (
	"testing"
	"time"

	"github.com/stackrox/scanner/database"
	"github.com/stackrox/scanner/pkg/rhelv2/archop"
	"github.com/stretchr/testify/assert"
)

func TestInsertRHELv2Vulnerability(t *testing.T) {
	datastore, err := openDatabaseForTest("InsertRHELv2Vulnerability", false)
	if err != nil {
		t.Error(err)
		return
	}
	defer datastore.Close()

	issued := time.Now()
	v1 := &database.RHELv2Vulnerability{
		Name:        "CVE-2021-1234",
		Description: "my vuln",
		Issued:      issued,
		Links:       "https://access.redhat.com/security/cve/CVE-2021-1234",
		Severity:    "Important",
		CVSSv3:      "",
		CPEs: []string{
			"cpe:/o:redhat:enterprise_linux:8",
		},
		Package: &database.Package{
			Name: "package",
			Arch: "x86_64",
		},
		FixedInVersion: "0:1.0.8-13.el8",
		ArchOperation:  archop.OpEquals,
	}
	updated := time.Now()
	v2 := &database.RHELv2Vulnerability{
		Name:        "CVE-2021-1235",
		Description: "my vuln2",
		Updated:     updated,
		Links:       "https://access.redhat.com/security/cve/CVE-2021-1235",
		Severity:    "Moderate",
		CVSSv3:      "",
		CPEs: []string{
			"cpe:/o:redhat:enterprise_linux:8",
		},
		Package: &database.Package{
			Name: "package",
			Arch: "x86_64",
		},
		FixedInVersion: "0:1.0.8-13.el8",
		ArchOperation:  archop.OpEquals,
	}

	err = datastore.InsertRHELv2Vulnerabilities([]*database.RHELv2Vulnerability{v1, v2})
	assert.NoError(t, err)
}
