//go:build db_integration
// +build db_integration

package pgsql

import (
	"testing"

	"github.com/stackrox/scanner/database"
	"github.com/stackrox/scanner/pkg/component"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func TestLayerLanguageComponents(t *testing.T) {
	datastore, err := openDatabaseForTest("GetLayerLanguageComponents", false)
	if err != nil {
		t.Error(err)
		return
	}
	defer datastore.Close()

	// Insert layers.
	layer := database.Layer{
		Name: "TestGetLayerLanguageComponent1",
	}
	require.NoError(t, datastore.InsertLayer(layer, "lineage", nil))
	parent, err := datastore.FindLayer(layer.Name, "lineage", &database.DatastoreOptions{WithFeatures: true})
	require.NoError(t, err)
	layer = database.Layer{
		Name:   "TestGetLayerLanguageComponent2",
		Parent: &parent,
	}
	require.NoError(t, datastore.InsertLayer(layer, "lineage2", nil))

	// InsertLayerComponents.
	parentComponents := []*component.Component{
		{
			SourceType:      component.JavaSourceType,
			Name:            "Java Component",
			Version:         "1",
			Location:        "jars/my-java-jar.jar",
			JavaPkgMetadata: &component.JavaPkgMetadata{},
		},
	}
	assert.NoError(t, datastore.InsertLayerComponents("TestGetLayerLanguageComponent1", "lineage", parentComponents, nil, nil))

	components := []*component.Component{
		{
			SourceType: component.DotNetCoreRuntimeSourceType,
			Name:       ".NET Component",
			Version:    "3.1.2",
			Location:   "usr/share/dotnet/shared/Microsoft.NETCore.App/3.1.2/",
		},
	}
	assert.NoError(t, datastore.InsertLayerComponents("TestGetLayerLanguageComponent2", "lineage2", components, []string{"jars/my-java-jar.jar"}, nil))

	// GetLayerLanguageComponents.
	layers, err := datastore.GetLayerLanguageComponents("TestGetLayerLanguageComponent1", "lineage", nil)
	require.NoError(t, err)
	assert.Len(t, layers, 1)
	assert.Equal(t, "TestGetLayerLanguageComponent1", layers[0].Layer)
	assert.Equal(t, parentComponents, layers[0].Components)
	assert.Empty(t, layers[0].Removed)

	layers, err = datastore.GetLayerLanguageComponents("TestGetLayerLanguageComponent2", "lineage2", nil)
	require.NoError(t, err)
	assert.Len(t, layers, 2)
	assert.Equal(t, "TestGetLayerLanguageComponent1", layers[0].Layer)
	assert.Equal(t, parentComponents, layers[0].Components)
	assert.Empty(t, layers[0].Removed)
	assert.Equal(t, "TestGetLayerLanguageComponent2", layers[1].Layer)
	assert.Equal(t, components, layers[1].Components)
	assert.Equal(t, []string{"jars/my-java-jar.jar"}, layers[1].Removed)
}
